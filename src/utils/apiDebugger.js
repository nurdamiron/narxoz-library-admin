// src/utils/apiDebugger.js
/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ API-–∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤, –æ—Ç–≤–µ—Ç–æ–≤ –∏ –æ—à–∏–±–æ–∫ API
 */

const apiDebugger = {
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
     * 
     * @param {string} endpoint - –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ API
     * @param {string} method - HTTP –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
     * @param {Object} data - –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
     */
    logRequest: (endpoint, method, data = null) => {
      if (process.env.NODE_ENV !== 'production') {
        console.group(`üöÄ API –∑–∞–ø—Ä–æ—Å: ${method} ${endpoint}`);
        console.log('üìù –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', data);
        console.groupEnd();
      }
    },
  
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
     * 
     * @param {string} endpoint - –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ API
     * @param {Object} response - –û—Ç–≤–µ—Ç –æ—Ç API
     */
    logResponse: (endpoint, response) => {
      if (process.env.NODE_ENV !== 'production') {
        console.group(`‚úÖ API –æ—Ç–≤–µ—Ç: ${endpoint}`);
        console.log('üìä –°—Ç–∞—Ç—É—Å:', response.status);
        console.log('üì¶ –î–∞–Ω–Ω—ã–µ:', response.data);
        console.groupEnd();
      }
    },
  
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ—Ç API
     * 
     * @param {string} endpoint - –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ API
     * @param {Object} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
     */
    logError: (endpoint, error) => {
      if (process.env.NODE_ENV !== 'production') {
        console.group(`‚ùå API –æ—à–∏–±–∫–∞: ${endpoint}`);
        
        if (error.response) {
          // –ó–∞–ø—Ä–æ—Å –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω, –∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π
          // –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 2xx
          console.log('üìä –°—Ç–∞—Ç—É—Å:', error.response.status);
          console.log('üì¶ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
          console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:', error.response.headers);
        } else if (error.request) {
          // –ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ
          console.log('üì´ –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω:', error.request);
        } else {
          // –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
          console.log('üîÑ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', error.message);
        }
        
        console.log('‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞:', error.config);
        console.groupEnd();
      }
    }
  };
  
  export default apiDebugger;